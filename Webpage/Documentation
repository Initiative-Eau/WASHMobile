WASHMOBILE APPLICATION DOCUMENTATION

INSTALLATION
1) Download and Install Python 2.7 if you do not already have it and/or are not using a Mac/Ubuntu.
   a) Can be found at: https://www.python.org/download/releases/2.7/

2) Download and Install GitHub
   a) Choose correct version at: https://desktop.github.com/ OR...
   b) Open Terminal or CMD, type 'sudo apt install git' to install (continue with 'y')
   c) Open up Terminal (Mac/Linux) or CMD (Windows), type 'git' and press <enter> to confirm installation.

3) Open terminal and navigate to the location where you'd like to download/install WashMobile
   a) This can be done with the "cd" command ("Change Directory").
      i) Example: "cd ~/Desktop" takes me to my Desktop.
      ii) the command "ls" (list) shows all files in the current directory.
      iii) Use "pwd" or "cwd" to get present/current working directory.

4) Type 'git clone https://

USAGE -- QUICKSTART

Using the 'change directory' commands in your terminal or command prompt, navigate to:
"WASHMobile/Webpage". From there, type "python example.py", open up your browser, and go to
"http://localhost:5000/fullmap". From here, you can see the webpage and interact with the map.

USAGE -- COMPLETE

Currently, the WASHMobile can only be launched on a localhost (not accessible on the internet yet).
The current collection of data is housed in a local CSV file within the project directory. To add in
additional sources, simply type in the information within the box and re-run example.py to see the new
water sources displayed. Ultimately, this CSV file will be housed in the cloud (likely on AWS) so that,
it can be accessed and updated from anywhere, at any time.

The graphics, domain structure (i.e. naming conventions), verbage, etc can be edited by
changing example.py or example_fullmap.html as needed.

TEXTING SERVICE
Users can text the Twilio Number and receive information about a specific water source.

To Initiate:
0) Download and install ngrok, python 2.7, flask, twilio
1) Open two terminals
   a) navigate to textapy, and run "python textapi.py"
   b) (in other terminal) navigate to ngrok section and run  "./ngrok http 5000"

Users will then be able to text a water source ID and receive the latitude, logitude, quality, and date of last rating.
